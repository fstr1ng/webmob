- hosts: box
  remote_user: root
  tasks:
    - name: System packages
      package:
        state: present
        name:
          - python3-pip
          - docker.io

    - name: Python packages
      pip:
        executable: pip3
        state: present
        name: 
         - docker

    - name: Docker systemd-service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      loop:
       - portainer/portainer
       - nicolargo/glances
       - gogs/gogs 
       - organizrtools/organizr-v2
       - grafana/grafana
       - netdata/netdata
       - rlister/hastebin

    - name: Portainer app
      docker_container:
        name: portainer
        image: portainer/portainer
        restart: yes
        restart_policy: always
        published_ports:
         - 8000:8000
         - 9000:9000
        volumes:
         - /var/run/docker.sock:/var/run/docker.sock:ro
         - /var/portainer:/data


    - name: Glances app
      docker_container:
        name: glances
        image: nicolargo/glances
        restart: yes
        restart_policy: always
        published_ports: 61208-61209:61208-61209 
        volumes: /var/run/docker.sock:/var/run/docker.sock:ro
        env:
         GLANCES_OPT: "-w" 
        pid_mode: host

    - name: Gogs app
      docker_container:
        name: gogs
        image: gogs/gogs
        restart: yes
        restart_policy: always
        published_ports:
         - 999:22
         - 10000:3000
        volumes:
         - /var/gogs:/data

# Gogs admin settings:
# Repository Root Path: keep it as default value /home/git/gogs-repositories because start.sh already made a symbolic link for you.
# Run User: keep it as default value git because finalize.sh already setup a user with name git.
# Domain: fill in with Docker container IP (e.g. 192.168.99.100). But if you want to access your Gogs instance from a different physical machine, please fill in with the hostname or IP address of the Docker host machine.
# SSH Port: Use the exposed port from Docker container. For example, your SSH server listens on 22 inside Docker, but you expose it by 10022:22, then use 10022 for this value. Builtin SSH server is not recommended inside Docker Container
# HTTP Port: Use port you want Gogs to listen on inside Docker container. For example, your Gogs listens on 3000 inside Docker, and you expose it by 10080:3000, but you still use 3000 for this value.
# Application URL: Use combination of Domain and exposed HTTP Port values (e.g. http://192.168.99.100:10080/).

    - name: Organizr app
      docker_container:
        name: organizr
        image: organizrtools/organizr-v2
        restart: yes
        restart_policy: always
        published_ports:
         - 80:80
        volumes:
         - /var/organizr:/data

    - name: Grafana app
      docker_container:
        name: grafana
        image: grafana/grafana
        restart: yes
        restart_policy: always
        published_ports:
         - 85:3000
        volumes:
         - /var/grafana:/data
         
    - name: Netdata app
      docker_container:
        name: netdata
        image: netdata/netdata
        restart: yes
        restart_policy: always
        published_ports:
         - 19999:19999
        volumes:
         - /etc/passwd:/host/etc/passwd:ro
         - /etc/group:/host/etc/group:ro
         - /proc:/host/proc:ro
         - /sys:/host/sys:ro
         - /var/run/docker.sock:/var/run/docker.sock:ro
        security_opts:
         - apparmor=unconfined
        capabilities:
         - SYS_PTRACE

    - name: Hastebin app
      docker_container:
        name: hastebin 
        image: rlister/hastebin
        restart: yes
        restart_policy: always
        published_ports:
         - 7777:7777
        volumes:
         - /var/hastebin:/app/data
        env:
         STORAGE_TYPE: "file"
